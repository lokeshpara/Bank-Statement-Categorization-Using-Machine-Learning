# -*- coding: utf-8 -*-
"""dataset_making.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19sSMRsg7wAhW8KznO0Pr9Jec8S-ZJ-ZV
"""

import random
import pandas as pd
!pip install faker
from faker import Faker
from google.colab import drive
drive.mount('/content/drive')





from re import U
food_dining_data = pd.read_csv('/content/drive/MyDrive/colab data/data/food&dining.csv')
food_dining_data.columns = ["Names","values"]
food_dining_data.dropna(subset=["Names"],inplace=True)
food_dining_data.drop_duplicates(inplace=True)
food_dining_data = food_dining_data["Names"]

transport_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Transport.csv')
transport_data.dropna(subset=["Names"],inplace=True)
transport_data.drop_duplicates(inplace=True)
transport_data = transport_data["Names"]

Utilities_and_bills_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Utilities and bills.csv')
Utilities_and_bills_data.columns = ["Names"]
Utilities_and_bills_data.dropna(subset=["Names"],inplace=True)
Utilities_and_bills_data.drop_duplicates(inplace=True)
Utilities_and_bills_data = Utilities_and_bills_data["Names"]

Shopping_Retail_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Shopping & Retail.csv')
Shopping_Retail_data.columns = ["Names"]
Shopping_Retail_data.dropna(subset=["Names"],inplace=True)
Shopping_Retail_data.drop_duplicates(inplace=True)
Shopping_Retail_data = Shopping_Retail_data["Names"]

Healthcare_Wellness_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Healthcare & Wellness.csv')
Healthcare_Wellness_data.columns = ["Names"]
Healthcare_Wellness_data.dropna(subset=["Names"],inplace=True)
Healthcare_Wellness_data.drop_duplicates(inplace=True)
Healthcare_Wellness_data = Healthcare_Wellness_data["Names"]

Subscriptions_Entertainment_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Subscriptions & Entertainment.csv')
Subscriptions_Entertainment_data.columns = ["Names"]
Subscriptions_Entertainment_data.dropna(subset=["Names"],inplace=True)
Subscriptions_Entertainment_data.drop_duplicates(inplace=True)
Subscriptions_Entertainment_data = Subscriptions_Entertainment_data["Names"]

Financial_Services_Fees_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Financial Services & Fees.csv')
Financial_Services_Fees_data.columns = ["Names"]
Financial_Services_Fees_data.dropna(subset=["Names"],inplace=True)
Financial_Services_Fees_data.drop_duplicates(inplace=True)
Financial_Services_Fees_data = Financial_Services_Fees_data["Names"]

Donation_Education_data = pd.read_csv('/content/drive/MyDrive/colab data/data/Donations & Education.csv')
Donation_Education_data.columns = ["Names"]
Donation_Education_data.dropna(subset=["Names"],inplace=True)
Donation_Education_data.drop_duplicates(inplace=True)
Donation_Education_data = Donation_Education_data["Names"]

print(food_dining_data.shape, transport_data.shape, Utilities_and_bills_data.shape, Shopping_Retail_data.shape, Healthcare_Wellness_data.shape, Subscriptions_Entertainment_data.shape, Financial_Services_Fees_data.shape, Donation_Education_data.shape)

restaurant_data = df.loc[df['Category'] == 'Restaurants', ['Description',"Amount"]]
restaurant_data.drop_duplicates(inplace=True)
food_dining_data.to_csv("/content/drive/MyDrive/colab data/transport data/food_dining_updated.csv",index=False)

fake = Faker()

categories = {
    "Food & Dining": food_dining_data ,
    "Transport": transport_data,
    "Utilities & Shopping": Utilities_and_bills_data ,
    "Shopping & Retail": Shopping_Retail_data,
    "Healthcare_wellness": Healthcare_Wellness_data,
    "Subscriptions & Entertainment": Subscriptions_Entertainment_data,
    "Financial Services & Fees": Financial_Services_Fees_data,
    "Donations & Education": Donation_Education_data
}

from faker import Faker
import random

fake = Faker()

def generate_bank_statement():
    descriptions = []

    # Simulate a list of Zelle payments, purchases, and transfers
    for _ in range(15):  # Generate 15 transactions
        transaction_type = random.choice(["Zelle payment", "Online Banking payment", "HULU", "UBER", "Bank of America"])

        if "Zelle payment" in transaction_type:
            direction = random.choice(["from", "to"])  # Randomly choose if it's from or to
            name = fake.name()
            conf_num = fake.uuid4()
            descriptions.append(f"Zelle payment {direction} {name} Conf# {conf_num[:8]}")  # Using a short part of the uuid4 for Conf# to simulate your format
        elif "Online Banking payment" in transaction_type:
            card_num = f"CRD {random.randint(1000, 9999)}"
            conf_num = fake.uuid4()
            descriptions.append(f"{transaction_type} to {card_num} Confirmation# {conf_num[:8]}")
        elif "HULU" in transaction_type:
            location = fake.city()
            date = fake.date_this_year().strftime("%m/%d")
            descriptions.append(f"HULU {date} PURCHASE {location} CA")
        elif "UBER" in transaction_type:
            location = fake.city()
            date = fake.date_this_year().strftime("%m/%d")
            descriptions.append(f"UBER * PENDI {date} PURCHASE {location} CA")
        elif "Bank of America" in transaction_type:
            descriptions.append(f"Bank of America DES:CASHREWARD ID:PARA INDN:{fake.bban()} CO ID:{fake.bban()} PPD")

    return descriptions

# Generate and print the bank statement descriptions
bank_statement = generate_bank_statement()
for description in bank_statement:
    print(description)



